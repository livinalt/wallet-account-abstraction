import { ethers } from "hardhat";

const Factory_Nonce = 1;
const Factory_Address = "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0";
const Entrypoint_Address = "0x931a4807fbE243fBe10Fa9FF84e3744E67A9c735";


async function main() {    
   
  const entryPoint = await ethers.getContractAt("EntryPoint", Entrypoint_Address);
 
 // // //CREATE2: hash(0xFF + sender + nonce + bytecode + salt)
  //CREATE: hash(sender + nonce)
  const sender = await ethers.getCreateAddress({
        from: Factory_Address, nonce: Factory_Nonce
    });

    const AccountFactory = await ethers.getContractFactory("AccountFactory");
    const [signer0] = await ethers.getSigners();
    const address0 = await signer0.getAddress();
    const initCode = Factory_Address + AccountFactory.interface.encodeFunctionData("createAccount",[address0]).slice(2);
    
    await entryPoint.depositTo(sender, {value:ethers.parseEther("100")});

    const Account = await ethers.getContractFactory("Account");

  const userOp = {
    sender, // smart account address
    nonce: await entryPoint.getNonce(sender,0),
    initCode,
    callData: Account.interface.encodeFunctionData("execute"),
    callGasLimit: 200_000,
    verificationGasLimit: 200_000,
    preVerificationGas: 50_000,
    maxFeePerGas: await ethers.parseUnits("10", "gwei"),
    maxPriorityFeePerGas: await ethers.parseUnits("5", "gwei"),
    paymasterAndData: "0x",
    signature: "0x"
  };

  const tx = entryPoint.handleOps([userOp], address0);
  const receipt = await tx.wait();
  console.log(receipt);



}


main().catch((error) => {
  console.error(error);
  process.exitCode = 1;
});
